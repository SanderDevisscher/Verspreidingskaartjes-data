AWNM <- as.numeric(nrow(temp3))
temp4 <- data.frame(a, b, c, AWNM)
temp4$x <- UTM1["POINT_X"]
temp5 <- rbind(temp5,temp4)
}
}
}
UTM1_Hokken <- unique(EuConc$gis_utm1_code)
temp5 <- data.frame()
for(a in UTM1_Hokken){
temp <- subset(EuConc, gis_utm1_code == a )
Soorten <- unique(EuConc$gbifapi_acceptedScientificName)
for(b in Soorten){
temp2 <- subset(temp, gbifapi_acceptedScientificName == b)
jaren <- unique(temp2$year)
for(c in jaren){
temp3 <- subset(temp2, year == c)
AWNM <- as.numeric(nrow(temp3))
temp4 <- data.frame(a, b, c, AWNM)
temp6 <- subset(UTM1, TAG == a)
temp4$x <- UTM1$POINT_X
temp4$y <- UTM1$POINT_Y
temp5 <- rbind(temp5,temp4)
}
}
}
for(a in UTM1_Hokken){
temp <- subset(EuConc, gis_utm1_code == a )
Soorten <- unique(EuConc$gbifapi_acceptedScientificName)
for(b in Soorten){
temp2 <- subset(temp, gbifapi_acceptedScientificName == b)
jaren <- unique(temp2$year)
for(c in jaren){
temp3 <- subset(temp2, year == c)
AWNM <- as.numeric(nrow(temp3))
temp4 <- data.frame(a, b, c, AWNM)
temp6 <- subset(UTM1, TAG == a)
temp4$x <- temp6$POINT_X
temp4$y <- temp6$POINT_Y
temp5 <- rbind(temp5,temp4)
}
}
}
UTM1_Hokken <- unique(EuConc$gis_utm1_code)
temp5 <- data.frame()
for(a in UTM1_Hokken){
temp <- subset(EuConc, gis_utm1_code == a )
Soorten <- unique(EuConc$gbifapi_acceptedScientificName)
for(b in Soorten){
temp2 <- subset(temp, gbifapi_acceptedScientificName == b)
jaren <- unique(temp2$year)
for(c in jaren){
temp3 <- subset(temp2, year == c)
AWNM <- as.numeric(nrow(temp3))
temp4 <- data.frame(a, b, c, AWNM)
temp6 <- subset(UTM1, TAG == a)
temp4$x <- temp6$POINT_X
temp4$y <- temp6$POINT_Y
temp5 <- rbind(temp5,temp4)
}
}
}
write.csv(temp5, "EuConc_UTM1_xyLink.csv", sep = ",")
for(a in UTM1_Hokken){
temp <- subset(EuConc, gis_utm1_code == a )
Soorten <- unique(EuConc$gbifapi_acceptedScientificName)
for(b in Soorten){
temp2 <- subset(temp, gbifapi_acceptedScientificName == b)
jaren <- unique(temp2$year)
for(c in jaren){
temp3 <- subset(temp2, year == c)
AWNM <- as.numeric(nrow(temp3))
temp4 <- data.frame(a, b, c, AWNM)
temp6 <- subset(UTM1, TAG == a)
if (!is.na(temp6$POINT_X)){
temp4$x <- temp6$POINT_X
temp4$y <- temp6$POINT_Y
temp5 <- rbind(temp5,temp4)
}
}
}
}
write.csv(temp5, "EuConc_UTM1_xyLink.csv", sep = ",")
for(a in UTM1_Hokken){
temp <- subset(EuConc, gis_utm1_code == a )
Soorten <- unique(EuConc$gbifapi_acceptedScientificName)
for(b in Soorten){
temp2 <- subset(temp, gbifapi_acceptedScientificName == b)
jaren <- unique(temp2$year)
for(c in jaren){
temp3 <- subset(temp2, year == c)
AWNM <- as.numeric(nrow(temp3))
temp4 <- data.frame(a, b, c, AWNM)
temp6 <- subset(UTM1, TAG == a)
for (!is.na(temp6$POINT_X)){next}
temp4$x <- temp6$POINT_X
temp4$y <- temp6$POINT_Y
temp5 <- rbind(temp5,temp4)
}
}
}
####Basics#### Workingdirectory instellen, Data inlezen & Libraries laden
setwd(dir = "C://Users/sander_devisscher/Google Drive/EU_IAS/T0")
library(dplyr)
Brondata <- read.csv("C:/Users/sander_devisscher/Google Drive/EU_IAS/T0/invasive-t0-occurrences/data/processed/invasive_EU_listed_and_considered_with_joins.tsv", header=TRUE)
####Basics#### Workingdirectory instellen, Data inlezen & Libraries laden
setwd(dir = "C://Users/sander_devisscher/Google Drive/EU_IAS/T0")
library(dplyr)
Brondata <- read.csv("C:/Users/sander_devisscher/Google Drive/EU_IAS/T0/invasive-t0-occurrences/data/processed/invasive_EU_listed_and_considered_with_joins.tsv", header=TRUE)
UTM1 <- read.csv2("C:/Users/sander_devisscher/Google Drive/EU_IAS/T0/Verspreidingskaartjes data/UTM1.csv")
Brondata_Ruw <- Brondata
Brondata_Redux <- Brondata[c("euConcernStatus", "gis_utm1_code", "gbifapi_acceptedScientificName", "year")]
####Opsplitsen#### Volgens eulist status
EuConc <- subset(Brondata_Redux, euConcernStatus == "listed")
EuPrep <- subset(Brondata_Redux, euConcernStatus == "under preparation")
EuCons <- subset(Brondata_Redux, euConcernStatus == "under consideration")
temp <- subset(EuConc, is.na(gis_utm1_code))
temp <- subset(EuConc, !is.na(gis_utm1_code))
temp <- subset(EuConc, !is.na(gis_utm1_code))
temp <- subset(EuConc, !is.na(gbifapi_acceptedScientificName))
temp <- subset(EuConc, !is.na(year))
####Basics#### Workingdirectory instellen, Data inlezen & Libraries laden
setwd(dir = "C://Users/sander_devisscher/Google Drive/EU_IAS/T0")
library(dplyr)
Brondata <- read.csv("C:/Users/sander_devisscher/Google Drive/EU_IAS/T0/invasive-t0-occurrences/data/processed/invasive_EU_listed_and_considered_with_joins.tsv", header=TRUE)
UTM1 <- read.csv2("C:/Users/sander_devisscher/Google Drive/EU_IAS/T0/Verspreidingskaartjes data/UTM1.csv")
Brondata_Ruw <- Brondata
Brondata_Redux <- Brondata[c("euConcernStatus", "gis_utm1_code", "gbifapi_acceptedScientificName", "year")]
####Opsplitsen#### Volgens eulist status
EuConc <- subset(Brondata_Redux, euConcernStatus == "listed")
EuPrep <- subset(Brondata_Redux, euConcernStatus == "under preparation")
EuCons <- subset(Brondata_Redux, euConcernStatus == "under consideration")
####Vereenvoudiging EUConcern####
temp <- subset(EuConc, !is.na(gis_utm1_code))
temp <- subset(EuConc, !is.na(gbifapi_acceptedScientificName))
temp <- subset(EuConc, !is.na(year))
temp6 <- data.frame()
UTM1_Hokken <- unique(temp$gis_utm1_code)
for(a in UTM1_Hokken){
temp2 <- subset(temp, gis_utm1_code == a)
soorten <- unique(temp2$gbifapi_acceptedScientificName)
for(b in soorten){
temp3 <- subset(temp2, gbifapi_acceptedScientificName == b)
jaren <- unique(temp3$year)
for(c in jaren){
temp4 <- subset(temp3, year == c)
aantalwnm <- nrow(temp4)
temp5$UTM1_TAG <- unique(a)
temp5$soort <- unique(b)
temp5$jaar <- unique(c)
temp5$aantalwnm <- aantalwnm
}
}
}
write.csv(temp5, "EuConc_UTM1_xyLink.csv", sep = ",")
####Vereenvoudiging EUConcern####
temp <- subset(EuConc, !is.na(gis_utm1_code))
temp <- subset(EuConc, !is.na(gbifapi_acceptedScientificName))
temp <- subset(EuConc, !is.na(year))
temp6 <- data.frame()
UTM1_Hokken <- unique(temp$gis_utm1_code)
for(a in UTM1_Hokken){
temp2 <- subset(temp, gis_utm1_code == a)
soorten <- unique(temp2$gbifapi_acceptedScientificName)
for(b in soorten){
temp3 <- subset(temp2, gbifapi_acceptedScientificName == b)
jaren <- unique(temp3$year)
for(c in jaren){
temp4 <- subset(temp3, year == c)
aantalwnm <- nrow(temp4)
temp5 <- data.frame(a, b, c, aantalwnm)
temp6 <- rbind(temp6, temp5)
}
}
}
View(temp6)
UTM1_Hokken <- unique(temp$gis_utm1_code)
for(a in UTM1_Hokken){
temp2 <- subset(temp, gis_utm1_code == a)
soorten <- unique(temp2$gbifapi_acceptedScientificName)
for(b in soorten){
temp3 <- subset(temp2, gbifapi_acceptedScientificName == b)
jaren <- unique(temp3$year)
for(c in jaren){
temp4 <- subset(temp3, year == c)
aantalwnm <- nrow(temp4)
UTM1_TAG <- a
soort <- b
jaar <- c
temp5 <- data.frame(UTM1_TAG, soort, jaar, aantalwnm)
temp6 <- rbind(temp6, temp5)
}
}
}
####Vereenvoudiging EUConcern####
temp <- subset(EuConc, !is.na(gis_utm1_code))
temp <- subset(EuConc, !is.na(gbifapi_acceptedScientificName))
temp <- subset(EuConc, !is.na(year))
temp6 <- data.frame()
UTM1_Hokken <- unique(temp$gis_utm1_code)
for(a in UTM1_Hokken){
temp2 <- subset(temp, gis_utm1_code == a)
soorten <- unique(temp2$gbifapi_acceptedScientificName)
for(b in soorten){
temp3 <- subset(temp2, gbifapi_acceptedScientificName == b)
jaren <- unique(temp3$year)
for(c in jaren){
temp4 <- subset(temp3, year == c)
aantalwnm <- nrow(temp4)
UTM1_TAG <- a
soort <- b
jaar <- c
temp5 <- data.frame(UTM1_TAG, soort, jaar, aantalwnm)
temp6 <- rbind(temp6, temp5)
}
}
}
temp7 <- merge(x = temp6, y = UTM1, by.x = UTM1_TAG, by.y = TAG, all.x = TRUE)
temp7 <- merge(x = temp6, y = UTM1, by.x = temp6$UTM1_TAG, by.y = UTM1$TAG, all.x = TRUE)
####Vereenvoudiging EUConcern####
temp <- subset(EuConc, !is.na(gis_utm1_code))
temp <- subset(EuConc, !is.na(gbifapi_acceptedScientificName))
temp <- subset(EuConc, !is.na(year))
temp6 <- data.frame()
UTM1_Hokken <- unique(temp$gis_utm1_code)
for(a in UTM1_Hokken){
temp2 <- subset(temp, gis_utm1_code == a)
soorten <- unique(temp2$gbifapi_acceptedScientificName)
for(b in soorten){
temp3 <- subset(temp2, gbifapi_acceptedScientificName == b)
jaren <- unique(temp3$year)
for(c in jaren){
temp4 <- subset(temp3, year == c)
aantalwnm <- nrow(temp4)
TAG <- a
soort <- b
jaar <- c
temp5 <- data.frame(UTM1_TAG, soort, jaar, aantalwnm)
temp6 <- rbind(temp6, temp5)
}
}
}
temp6 <- data.frame()
####Vereenvoudiging EUConcern####
temp <- subset(EuConc, !is.na(gis_utm1_code))
temp <- subset(EuConc, !is.na(gbifapi_acceptedScientificName))
temp <- subset(EuConc, !is.na(year))
temp6 <- data.frame()
UTM1_Hokken <- unique(temp$gis_utm1_code)
for(a in UTM1_Hokken){
temp2 <- subset(temp, gis_utm1_code == a)
soorten <- unique(temp2$gbifapi_acceptedScientificName)
for(b in soorten){
temp3 <- subset(temp2, gbifapi_acceptedScientificName == b)
jaren <- unique(temp3$year)
for(c in jaren){
temp4 <- subset(temp3, year == c)
aantalwnm <- nrow(temp4)
TAG <- a
soort <- b
jaar <- c
temp5 <- data.frame(UTM1_TAG, soort, jaar, aantalwnm)
temp6 <- rbind(temp6, temp5)
}
}
}
View(temp6)
####Vereenvoudiging EUConcern####
temp <- subset(EuConc, !is.na(gis_utm1_code))
temp <- subset(EuConc, !is.na(gbifapi_acceptedScientificName))
temp <- subset(EuConc, !is.na(year))
temp6 <- data.frame()
UTM1_Hokken <- unique(temp$gis_utm1_code)
for(a in UTM1_Hokken){
temp2 <- subset(temp, gis_utm1_code == a)
soorten <- unique(temp2$gbifapi_acceptedScientificName)
for(b in soorten){
temp3 <- subset(temp2, gbifapi_acceptedScientificName == b)
jaren <- unique(temp3$year)
for(c in jaren){
temp4 <- subset(temp3, year == c)
aantalwnm <- nrow(temp4)
TAG <- a
soort <- b
jaar <- c
temp5 <- data.frame(TAG, soort, jaar, aantalwnm)
temp6 <- rbind(temp6, temp5)
}
}
}
temp7 <- merge(x = temp6, y = UTM1, by = TAG, all.x = TRUE)
Hokken <- unique(UTM1$TAG)
for(d in Hokken){
tempx <- subset(UTM1, TAG == d)
number <- nrow(tempx)
if(number > 1){
print(TAG)
next}
}
####Vereenvoudiging EUConcern####
temp <- subset(EuConc, !is.na(gis_utm1_code))
temp <- subset(EuConc, !is.na(gbifapi_acceptedScientificName))
temp <- subset(EuConc, !is.na(year))
temp6 <- data.frame()
UTM1_Hokken <- unique(temp$gis_utm1_code)
for(a in UTM1_Hokken){
temp2 <- subset(temp, gis_utm1_code == a)
soorten <- unique(temp2$gbifapi_acceptedScientificName)
for(b in soorten){
temp3 <- subset(temp2, gbifapi_acceptedScientificName == b)
jaren <- unique(temp3$year)
for(c in jaren){
temp4 <- subset(temp3, year == c)
aantalwnm <- nrow(temp4)
TAG <- a
soort <- b
jaar <- c
temp5 <- data.frame(TAG, soort, jaar, aantalwnm)
temp6 <- rbind(temp6, temp5)
temp7 <- merge(x = temp6, y = UTM1, by = TAG, all.x = TRUE)
}
}
}
####Vereenvoudiging EUConcern####
temp <- subset(EuConc, !is.na(gis_utm1_code))
temp <- subset(EuConc, !is.na(gbifapi_acceptedScientificName))
temp <- subset(EuConc, !is.na(year))
temp7 <- data.frame()
UTM1_Hokken <- unique(temp$gis_utm1_code)
for(a in UTM1_Hokken){
temp2 <- subset(temp, gis_utm1_code == a)
soorten <- unique(temp2$gbifapi_acceptedScientificName)
for(b in soorten){
temp3 <- subset(temp2, gbifapi_acceptedScientificName == b)
jaren <- unique(temp3$year)
for(c in jaren){
temp4 <- subset(temp3, year == c)
aantalwnm <- nrow(temp4)
TAG <- a
soort <- b
jaar <- c
temp5 <- data.frame(TAG, soort, jaar, aantalwnm)
temp6 <- merge(x = temp5, y = UTM1, by = TAG, all.x = TRUE)
temp7 <- rbind(temp7, temp6)
}
}
}
####Vereenvoudiging EUConcern####
temp <- subset(EuConc, !is.na(gis_utm1_code))
temp <- subset(EuConc, !is.na(gbifapi_acceptedScientificName))
temp <- subset(EuConc, !is.na(year))
temp7 <- data.frame()
UTM1_Hokken <- unique(temp$gis_utm1_code)
for(a in UTM1_Hokken){
temp2 <- subset(temp, gis_utm1_code == a)
soorten <- unique(temp2$gbifapi_acceptedScientificName)
for(b in soorten){
temp3 <- subset(temp2, gbifapi_acceptedScientificName == b)
jaren <- unique(temp3$year)
for(c in jaren){
temp4 <- subset(temp3, year == c)
aantalwnm <- nrow(temp4)
TAG <- a
soort <- b
jaar <- c
temp5 <- data.frame(TAG, soort, jaar, aantalwnm)
temp6 <- merge(x = temp5, y = UTM1, all.x = TRUE)
temp7 <- rbind(temp7, temp6)
}
}
}
for(a in UTM1_Hokken){
temp2 <- subset(temp, gis_utm1_code == a)
soorten <- unique(temp2$gbifapi_acceptedScientificName)
for(b in soorten){
temp3 <- subset(temp2, gbifapi_acceptedScientificName == b)
jaren <- unique(temp3$year)
for(c in jaren){
temp4 <- subset(temp3, year == c)
aantalwnm <- nrow(temp4)
TAG <- a
soort <- b
jaar <- c
temp5 <- data.frame(TAG, soort, jaar, aantalwnm)
#temp6 <- merge(x = temp5, y = UTM1, all.x = TRUE)
temp7 <- rbind(temp7, temp6)
}
}
}
temp7 <- data.frame()
UTM1_Hokken <- unique(temp$gis_utm1_code)
for(a in UTM1_Hokken){
temp2 <- subset(temp, gis_utm1_code == a)
soorten <- unique(temp2$gbifapi_acceptedScientificName)
for(b in soorten){
temp3 <- subset(temp2, gbifapi_acceptedScientificName == b)
jaren <- unique(temp3$year)
for(c in jaren){
temp4 <- subset(temp3, year == c)
aantalwnm <- nrow(temp4)
TAG <- a
soort <- b
jaar <- c
temp5 <- data.frame(TAG, soort, jaar, aantalwnm)
#temp6 <- merge(x = temp5, y = UTM1, all.x = TRUE)
temp7 <- rbind(temp7, temp6)
}
}
}
write.csv(temp7, "EuConc_UTM1_xyLink.csv", sep = ",")
write.csv2(temp7, "EuConc_UTM1_xyLink.csv", sep = ",")
write.csv2(temp7, "EuConc_UTM1_xyLink.csv")
write.csv2(temp7, "EuConc_UTM1_xyLink.csv")
setwd(dir = "C://Users/sander_devisscher/Google Drive/EU_IAS/T0/Verspreidingskaartjes data")
write.csv2(temp7, "EuConc_UTM1_xyLink.csv")
View(temp7)
temp7 <- data.frame()
UTM1_Hokken <- unique(temp$gis_utm1_code)
for(a in UTM1_Hokken){
temp2 <- subset(temp, gis_utm1_code == a)
soorten <- unique(temp2$gbifapi_acceptedScientificName)
for(b in soorten){
temp3 <- subset(temp2, gbifapi_acceptedScientificName == b)
jaren <- unique(temp3$year)
for(c in jaren){
temp4 <- subset(temp3, year == c)
aantalwnm <- nrow(temp4)
TAG <- a
soort <- b
jaar <- c
temp5 <- data.frame(TAG, soort, jaar, aantalwnm)
temp6 <- merge(x = temp5, y = UTM1, all.x = TRUE)
temp7 <- rbind(temp7, temp6)
}
}
}
View(temp7)
write.csv2(temp7, "EuConc_UTM1_xyLink.csv")
install.packages("foreign")
library(foreign)
write.dbf(temp7, "EuConc_UTM1_xyLink.dbf")
write.dbf(temp7, "EuConc_UTM1_xyLink.dbf")
write.csv2(temp7, "EuConc_UTM1_xyLink.csv")
####Basics#### Workingdirectory instellen, Data inlezen & Libraries laden
setwd(dir = "C://Users/sander_devisscher/Google Drive/EU_IAS/T0/Verspreidingskaartjes data")
library(dplyr)
library(foreign)
Brondata <- read.csv("C:/Users/sander_devisscher/Google Drive/EU_IAS/T0/invasive-t0-occurrences/data/processed/invasive_EU_listed_and_considered_with_joins.tsv", header=TRUE)
UTM1 <- read.csv2("C:/Users/sander_devisscher/Google Drive/EU_IAS/T0/Verspreidingskaartjes data/UTM1.csv")
Brondata_Ruw <- Brondata
Brondata_Redux <- Brondata[c("euConcernStatus", "gis_utm1_code", "gbifapi_acceptedScientificName", "year")]
####Opsplitsen#### Volgens eulist status
EuConc <- subset(Brondata_Redux, euConcernStatus == "listed")
EuPrep <- subset(Brondata_Redux, euConcernStatus == "under preparation")
EuCons <- subset(Brondata_Redux, euConcernStatus == "under consideration")
####Vereenvoudiging EUConcern####
temp <- subset(EuConc, !is.na(gis_utm1_code))
temp <- subset(EuConc, !is.na(gbifapi_acceptedScientificName))
temp <- subset(EuConc, !is.na(year))
temp7 <- data.frame()
UTM1_Hokken <- unique(temp$gis_utm1_code)
for(a in UTM1_Hokken){
temp2 <- subset(temp, gis_utm1_code == a)
soorten <- unique(temp2$gbifapi_acceptedScientificName)
for(b in soorten){
temp3 <- subset(temp2, gbifapi_acceptedScientificName == b)
temp4 <- temp3
aantalwnm <- nrow(temp4)
TAG <- a
soort <- b
temp5 <- data.frame(TAG, soort, aantalwnm)
temp6 <- merge(x = temp5, y = UTM1, all.x = TRUE)
temp7 <- rbind(temp7, temp6)
}
}
write.dbf(temp7, "EuConc_UTM1_xyLink.dbf")
write.csv2(temp7, "EuConc_UTM1_xyLink.csv")
View(temp7)
####Basics#### Workingdirectory instellen, Data inlezen & Libraries laden
setwd(dir = "C://Users/sander_devisscher/Google Drive/EU_IAS/T0/Verspreidingskaartjes data")
library(dplyr)
library(foreign)
Brondata <- read.csv("C:/Users/sander_devisscher/Google Drive/EU_IAS/T0/invasive-t0-occurrences/data/processed/invasive_EU_listed_and_considered_with_joins.tsv", header=TRUE)
UTM1 <- read.csv2("C:/Users/sander_devisscher/Google Drive/EU_IAS/T0/Verspreidingskaartjes data/UTM1.csv")
Brondata_Ruw <- Brondata
Brondata_Redux <- Brondata[c("euConcernStatus", "gis_utm1_code", "gbifapi_acceptedScientificName", "year")]
####Opsplitsen#### Volgens eulist status
EuConc <- subset(Brondata_Redux, euConcernStatus == "listed")
EuPrep <- subset(Brondata_Redux, euConcernStatus == "under preparation")
EuCons <- subset(Brondata_Redux, euConcernStatus == "under consideration")
####Vereenvoudiging EUConcern####
temp <- subset(EuConc, !is.na(gis_utm1_code))
temp <- subset(EuConc, !is.na(gbifapi_acceptedScientificName))
temp <- subset(EuConc, !is.na(year))
temp7 <- data.frame()
UTM1_Hokken <- unique(temp$gis_utm1_code)
for(a in UTM1_Hokken){
temp2 <- subset(temp, gis_utm1_code == a)
soorten <- unique(temp2$gbifapi_acceptedScientificName)
for(b in soorten){
temp3 <- subset(temp2, gbifapi_acceptedScientificName == b)
temp4 <- temp3
aantalwnm <- nrow(temp4)
TAG <- a
soort <- b
temp5 <- data.frame(TAG, soort, aantalwnm)
temp6 <- merge(x = temp5, y = UTM1)
temp7 <- rbind(temp7, temp6)
}
}
write.dbf(temp7, "EuConc_UTM1_xyLink.dbf")
write.csv2(temp7, "EuConc_UTM1_xyLink.csv")
